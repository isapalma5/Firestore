
import { db } from './firebase-config.js'; // Importa a configura√ß√£o do Firestore (inst√¢ncia do db)
import { onSnapshot, collection } from 'firebase/firestore'; // Importa as fun√ß√µes necess√°rias para escutar dados e acessar cole√ß√µes

// Fun√ß√£o para limpar o terminal antes de exibir novas informa√ß√µes
function limparTerminal() {
  process.stdout.write('\x1Bc'); 
}

// Fun√ß√£o para escutar mudan√ßas em tempo real na cole√ß√£o "usuarios" do Firestore
function escutarUsuariosTempoReal() {
  // Cria uma refer√™ncia para a cole√ß√£o "usuarios" no Firestore
  const usuariosRef = collection(db, "usuarios");

  // Fun√ß√£o onSnapshot escuta em tempo real as mudan√ßas na cole√ß√£o "usuarios"
  onSnapshot(usuariosRef, (snapshot) => {
    limparTerminal(); // Limpa o terminal sempre que uma nova atualiza√ß√£o for detectada

    console.log("üîÑ FIRESTORE - ESCUTA EM TEMPO REAL"); // Mensagem indicando que estamos escutando mudan√ßas em tempo real
    console.log("üì° Atualiza√ß√£o detectada:\n"); // Mensagem indicando que uma atualiza√ß√£o foi detectada

    // Verifica se n√£o h√° documentos na cole√ß√£o
    if (snapshot.empty) {
      console.log("Nenhum documento encontrado!"); 
    } else {
      // Caso contr√°rio, exibe os documentos encontrados na cole√ß√£o
      snapshot.forEach((doc) => {
        console.log(`${doc.id} =>`, doc.data()); // Exibe o ID e os dados de cada documento encontrado
      });
    }

    console.log("\nüëÇ Aguardando novas altera√ß√µes..."); // Mensagem indicando que o sistema est√° aguardando novas altera√ß√µes
  }, (error) => {
    // Caso ocorra um erro na escuta, exibe a mensagem de erro
    console.error("‚ùå Erro ao escutar dados:", error); // Mensagem de erro ao escutar dados em tempo real
  });
}

// Chama a fun√ß√£o para come√ßar a escutar os dados da cole√ß√£o "usuarios"
escutarUsuariosTempoReal();
